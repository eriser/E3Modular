

@startuml

!include skin.iuml

title
<font size=24 color=#000000>Class Diagram: Ports</font>

endtitle


class Port {
    +virtual int getNumConnections()
    +virtual int getNumAudioConnections()
    +virtual int getNumEventConnections()
    +virtual void disconnectAll()
    +virtual void setNumVoices(int numVoices)

    #int id_
    #ControlType controlType_
    #int_fast32_t numVoices_
    #int_fast32_t numAudioConnections_
    #int_fast32_t numEventConnections_
    #PortType type_
    #std::string label_;
 }

class Outport {
    +void connect(Module*, Link*, VoiceAdapterType) {}
    +void disconnect(Module*, Link*) {}
    +void putValue(double value, uint16_t voice = 0) throw();
    +void putEvent(double value, uint16_t voice);

    #uint16_t addAudioTarget( Link* link, VoiceAdapterType adapter );
    #uint16_t addEventTarget( Link* link, VoiceAdapterType adapter );
    #void removeAudioTarget( Link* link );
    #void removeEventTarget( Link* link );

    #LinkList audioLinks_
    #Buffer< double* > audioOutBuffer_
    #Buffer< VoiceAdapterType > audioAdapterBuffer_
    #Buffer< double > audioModulationBuffer_

    #LinkList eventLinks_
    #InportList eventInports_
    #Buffer< VoiceAdapterType > eventAdapterBuffer_
    #Buffer< double > eventModulationBuffer_
}

class Inport {
    +double* getAudioBuffer()

    #Buffer<double> audioInBuffer_

    #Module* eventOwnerModule_
    #int eventParamId_    = -1;
}

Port <|-- Outport
Port <|-- Inport

@enduml
